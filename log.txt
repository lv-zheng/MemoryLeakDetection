Test case #1:
INFO: memory leak detection on
INFO: new @0xda7348 (my_list.h:124)
INFO: new[] @0xda75e8 (:0)
INFO: new @0xda9608 (my_list.h:143)
INFO: new @0xda9678 (my_list.h:143)
INFO: new @0xda96e8 (my_list.h:143)
INFO: new @0xda97e8 (my_list.h:143)
Sorted by power:
GuanYu	95	88	95	85	80
XiaHouDun	90	80	92	75	80
LiuBei	84	91	86	95	85
LuSu	70	90	85	80	85
Sorted by total score:
GuanYu	95	88	95	85	80
LiuBei	84	91	86	95	85
XiaHouDun	90	80	92	75	80
LuSu	70	90	85	80	85
INFO: delete[] @0xda75e8 (:0)
INFO: delete @0xda9678 (my_list.h:143)
INFO: delete @0xda9608 (my_list.h:143)
INFO: delete @0xda97e8 (my_list.h:143)
INFO: delete @0xda96e8 (my_list.h:143)
INFO: delete @0xda7348 (my_list.h:124)
INFO: memory leak detection off
INFO: 6 new call(s)	6 delete call(s)	0 errors
INFO: memory leak detection data clear


Test case #2:
INFO: memory leak detection on
Some common memory faults:
INFO: new @0xda9758 (main.cpp:35)
INFO: new @0xda9788 (main.cpp:36)
WARNING: mismatch delete[] on single-object pointer @0xda9788 (main.cpp:36)
INFO: delete[] @0xda9788 (main.cpp:36)
INFO: new[] @0xda9788 (main.cpp:37)
WARNING: mismatch delete on array pointer @0xda9788 (main.cpp:37)
INFO: delete @0xda9788 (main.cpp:37)
ERROR: delete wild pointer @0x563d7c
INFO: memory leak detection off
ERROR: memory leak @0xda9758 (main.cpp:35)
INFO: 3 new call(s)	3 delete call(s)	4 errors
INFO: memory leak detection data clear
